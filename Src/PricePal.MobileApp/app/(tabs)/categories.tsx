import { LinearGradient } from 'expo-linear-gradient';
import { useRouter } from 'expo-router';
import React from 'react';
import { Dimensions, FlatList, ImageBackground, StyleSheet, Text, TouchableOpacity, View } from 'react-native';
const { width: screenWidth, height: screenHeight } = Dimensions.get('window');

//  Width and height functions
const wp = (percentage: number): number => {
  return (percentage * screenWidth) / 100;
};

const hp = (percentage: number): number => {
  return (percentage * screenHeight) / 100;
};

// Font functions
const getFontSize = (size: number): number => {
  if (screenWidth < 350) return size * 0.85; 
  if (screenWidth > 400) return size * 1.1;  
  return size;
};

export interface Subcategory {
  id: string;
  name: string;
}

export interface CategoriesProps {
  text: string;
  link: string;
  id: string;
  subcategories: Subcategory[];
}

export interface Product {
  id: string;
  name: string;
  price: number;
  description?: string;
  subcategoryId: string;
}

export const productsArray: Product[] = [
  { id: 'apple-1', name: '–Ø–±—ä–ª–∫–∞', price: 1.2, subcategoryId: 'fruits' },
  { id: 'banana-1', name: '–ë–∞–Ω–∞–Ω', price: 1.5, subcategoryId: 'fruits' },
  { id: 'carrot-1', name: '–ú–æ—Ä–∫–æ–≤', price: 0.8, subcategoryId: 'vegetables' },
  { id: 'milk-1', name: '–ú–ª—è–∫–æ 1–ª', price: 2, subcategoryId: 'milk' },
];

export const categoriesArray: CategoriesProps[] = [
  { 
    id: "fruits-vegetables", 
    text: "üçé–ü–ª–æ–¥–æ–≤–µ –∏ –∑–µ–ª–µ–Ω—á—É—Ü–∏", 
    link: "fruits-vegetables",
    subcategories: [
      { id: "fruits", name: "–ü–ª–æ–¥–æ–≤–µ" },
      { id: "vegetables", name: "–ó–µ–ª–µ–Ω—á—É—Ü–∏" },
      { id: "fresh-herbs", name: "–°–≤–µ–∂–∏ –ø–æ–¥–ø—Ä–∞–≤–∫–∏" }
    ]
  },
  { 
    id: "meat-poultry", 
    text: "ü•©–ú–µ—Å–æ –∏ –ø—Ç–∏—Ü–∏", 
    link: "meat-poultry",
    subcategories: [
      { id: "fresh-meat", name: "–ü—Ä—è—Å–Ω–æ –º–µ—Å–æ (—Å–≤–∏–Ω—Å–∫–æ, —Ç–µ–ª–µ—à–∫–æ, –ø–∏–ª–µ—à–∫–æ, –∞–≥–Ω–µ—à–∫–æ)" },
      { id: "processed-meat", name: "–ü—Ä–µ—Ä–∞–±–æ—Ç–µ–Ω–æ –º–µ—Å–æ (–∫–æ–ª–±–∞—Å–∏, —Å–∞–ª–∞–º–∏)" },
      { id: "bacon-ham", name: "–ë–µ–∫–æ–Ω –∏ —à—É–Ω–∫–∞" }
    ]
  },
  { 
    id: "fish-seafood", 
    text: "üêü–†–∏–±–∞ –∏ –º–æ—Ä—Å–∫–∏ –¥–∞—Ä–æ–≤–µ", 
    link: "fish-seafood",
    subcategories: [
      { id: "fresh-fish", name: "–ü—Ä—è—Å–Ω–∞ —Ä–∏–±–∞" },
      { id: "frozen-seafood", name: "–ó–∞–º—Ä–∞–∑–µ–Ω–∏ –º–æ—Ä—Å–∫–∏ –¥–∞—Ä–æ–≤–µ" }
    ]
  },
  { 
    id: "dairy", 
    text: "üßÄ–ú–ª–µ—á–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏", 
    link: "dairy",
    subcategories: [
      { id: "milk", name: "–ú–ª—è–∫–æ" },
      { id: "yogurt", name: "–ö–∏—Å–µ–ª–æ –º–ª—è–∫–æ" },
      { id: "cheese", name: "–°–∏—Ä–µ–Ω–µ –∏ –∫–∞—à–∫–∞–≤–∞–ª" },
      { id: "butter", name: "–ú–∞—Å–ª–æ –∏ –º–∞—Ä–≥–∞—Ä–∏–Ω" },
      { id: "cream", name: "–°–º–µ—Ç–∞–Ω–∞" }
    ]
  },
  { 
    id: "bakery", 
    text: "üçû–•–ª–µ–±–Ω–∏ –∏–∑–¥–µ–ª–∏—è", 
    link: "bakery",
    subcategories: [
      { id: "bread", name: "–•–ª—è–±" },
      { id: "banitsi", name: "–ë–∞–Ω–∏—Ü–∏ –∏ –∑–∞–∫—É—Å–∫–∏" },
      { id: "sweets", name: "–°–ª–∞–¥–∫–∏—à–∏" },
      { id: "tortillas", name: "–¢–æ—Ä—Ç–∏–ª–∏ –∏ –ø–∏—Ç–∫–∏" }
    ]
  },
  { 
    id: "frozen-foods", 
    text: "‚ùÑÔ∏è–ó–∞–º—Ä–∞–∑–µ–Ω–∏ —Ö—Ä–∞–Ω–∏", 
    link: "frozen-foods",
    subcategories: [
      { id: "frozen-vegetables", name: "–ó–∞–º—Ä–∞–∑–µ–Ω–∏ –∑–µ–ª–µ–Ω—á—É—Ü–∏" },
      { id: "ready-meals", name: "–ì–æ—Ç–æ–≤–∏ —è—Å—Ç–∏—è" },
      { id: "ice-cream", name: "–°–ª–∞–¥–æ–ª–µ–¥ –∏ –¥–µ—Å–µ—Ä—Ç–∏" },
      { id: "frozen-pizza", name: "–ó–∞–º—Ä–∞–∑–µ–Ω–∞ –ø–∏—Ü–∞" }
    ]
  },
  { 
    id: "canned-foods", 
    text: "ü•´–ö–æ–Ω—Å–µ—Ä–≤–∏ –∏ –ø–∞–∫–µ—Ç–∏—Ä–∞–Ω–∏ —Ö—Ä–∞–Ω–∏", 
    link: "canned-foods",
    subcategories: [
      { id: "canned-vegetables", name: "–ö–æ–Ω—Å–µ—Ä–≤–∏—Ä–∞–Ω–∏ –∑–µ–ª–µ–Ω—á—É—Ü–∏" },
      { id: "canned-fruits", name: "–ö–æ–Ω—Å–µ—Ä–≤–∏—Ä–∞–Ω–∏ –ø–ª–æ–¥–æ–≤–µ" },
      { id: "beans-lentils", name: "–ë–æ–±–æ–≤–∏ –∏ –ª–µ—â–∞" },
      { id: "soups-broths", name: "–°—É–ø–∏ –∏ –±—É–ª—å–æ–Ω–∏" },
      { id: "tomato-products", name: "–î–æ–º–∞—Ç–µ–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏" }
    ]
  },
  { 
    id: "staples-spices", 
    text: "ü•ñ–û—Å–Ω–æ–≤–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏ –∏ –ø–æ–¥–ø—Ä–∞–≤–∫–∏", 
    link: "staples-spices",
    subcategories: [
      { id: "rice", name: "–û—Ä–∏–∑" },
      { id: "pasta", name: "–ú–∞–∫–∞—Ä–æ–Ω–∏ –∏ —Å–ø–∞–≥–µ—Ç–∏" },
      { id: "flour-baking", name: "–ë—Ä–∞—à–Ω–æ –∏ –ø—Ä–æ–¥—É–∫—Ç–∏ –∑–∞ –ø–µ—á–µ–Ω–µ" },
      { id: "sugar-sweeteners", name: "–ó–∞—Ö–∞—Ä –∏ –ø–æ–¥—Å–ª–∞–¥–∏—Ç–µ–ª–∏" },
      { id: "spices-herbs", name: "–ü–æ–¥–ø—Ä–∞–≤–∫–∏ –∏ –±–∏–ª–∫–∏" },
      { id: "oil-vinegar", name: "–û–ª–∏–æ, –∑–µ—Ö—Ç–∏–Ω –∏ –æ—Ü–µ—Ç" }
    ]
  },
  { 
    id: "snacks", 
    text: "üçø–°–Ω–∞–∫—Å–æ–≤–µ", 
    link: "snacks",
    subcategories: [
      { id: "chips-crackers", name: "–ß–∏–ø—Å–æ–≤–µ –∏ –∫—Ä–µ–∫–µ—Ä–∏" },
      { id: "nuts-seeds", name: "–Ø–¥–∫–∏ –∏ —Å–µ–º–µ–Ω–∞" },
      { id: "popcorn", name: "–ü—É–∫–∞–Ω–∫–∏" }
    ]
  },
  { 
    id: "sweets-desserts", 
    text: "üç´–°–ª–∞–¥–∫–∏ –∏ –¥–µ—Å–µ—Ä—Ç–∏", 
    link: "sweets-desserts",
    subcategories: [
      { id: "chocolate", name: "–®–æ–∫–æ–ª–∞–¥" },
      { id: "candies", name: "–ë–æ–Ω–±–æ–Ω–∏" },
      { id: "biscuits-waffles", name: "–ë–∏—Å–∫–≤–∏—Ç–∏ –∏ –≤–∞—Ñ–ª–∏" }
    ]
  },
  { 
    id: "breakfast-cereals", 
    text: "ü•£–ó–∞–∫—É—Å–∫–∞ –∏ –∑—ä—Ä–Ω–µ–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏", 
    link: "breakfast-cereals",
    subcategories: [
      { id: "oats", name: "–û–≤–µ—Å–µ–Ω–∏ —è–¥–∫–∏" },
      { id: "muesli", name: "–ú—é—Å–ª–∏" },
      { id: "cornflakes", name: "–ö–æ—Ä–Ω—Ñ–ª–µ–π–∫—Å" }
    ]
  },
  { 
    id: "drinks", 
    text: "ü•§–ù–∞–ø–∏—Ç–∫–∏", 
    link: "drinks",
    subcategories: [
      { id: "water", name: "–í–æ–¥–∞" },
      { id: "juices", name: "–°–æ–∫–æ–≤–µ" },
      { id: "soda", name: "–ì–∞–∑–∏—Ä–∞–Ω–∏ –Ω–∞–ø–∏—Ç–∫–∏" },
      { id: "tea", name: "–ß–∞–π" },
      { id: "coffee", name: "–ö–∞—Ñ–µ" },
      { id: "energy-drinks", name: "–ï–Ω–µ—Ä–≥–∏–π–Ω–∏ –Ω–∞–ø–∏—Ç–∫–∏" }
    ]
  },
  { 
    id: "alcohol", 
    text: "üç∑–ê–ª–∫–æ—Ö–æ–ª", 
    link: "alcohol",
    subcategories: [
      { id: "beer", name: "–ë–∏—Ä–∞" },
      { id: "wine", name: "–í–∏–Ω–æ" },
      { id: "spirits", name: "–†–∞–∫–∏—è, —É–∏—Å–∫–∏ –∏ –¥—Ä—É–≥–∏ —Å–ø–∏—Ä—Ç–Ω–∏ –Ω–∞–ø–∏—Ç–∫–∏" }
    ]
  },
  { 
    id: "cleaning-laundry", 
    text: "üßº–ü–æ—á–∏—Å—Ç–≤–∞—â–∏ –∏ –ø–µ—Ä–∏–ª–Ω–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∏", 
    link: "cleaning-laundry",
    subcategories: [
      { id: "laundry-detergents", name: "–ü—Ä–µ–ø–∞—Ä–∞—Ç–∏ –∑–∞ –ø—Ä–∞–Ω–µ" },
      { id: "softeners", name: "–û–º–µ–∫–æ—Ç–∏—Ç–µ–ª–∏" },
      { id: "dish-detergents", name: "–ü—Ä–µ–ø–∞—Ä–∞—Ç–∏ –∑–∞ —Å—ä–¥–æ–≤–µ" },
      { id: "all-purpose-cleaners", name: "–£–Ω–∏–≤–µ—Ä—Å–∞–ª–Ω–∏ –ø–æ—á–∏—Å—Ç–≤–∞—â–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∏" },
      { id: "bathroom-cleaners", name: "–ü—Ä–µ–ø–∞—Ä–∞—Ç–∏ –∑–∞ –±–∞–Ω—è –∏ WC" }
    ]
  },
  { 
    id: "paper-products", 
    text: "üßª–•–∞—Ä—Ç–∏–µ–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏", 
    link: "paper-products",
    subcategories: [
      { id: "toilet-paper", name: "–¢–æ–∞–ª–µ—Ç–Ω–∞ —Ö–∞—Ä—Ç–∏—è" },
      { id: "kitchen-rolls", name: "–ö—É—Ö–Ω–µ–Ω—Å–∫–∏ —Ä–æ–ª–∫–∏" },
      { id: "napkins-towels", name: "–°–∞–ª—Ñ–µ—Ç–∫–∏ –∏ –∫—ä—Ä–ø–∏" }
    ]
  },
  { 
    id: "disposables", 
    text: "ü•°–ï–¥–Ω–æ–∫—Ä–∞—Ç–Ω–∏ —Å—ä–¥–æ–≤–µ –∏ –æ–ø–∞–∫–æ–≤–∫–∏", 
    link: "disposables",
    subcategories: [
      { id: "bags", name: "–¢–æ—Ä–±–∏—á–∫–∏" },
      { id: "foil", name: "–§–æ–ª–∏–æ –∏ —Å—Ç—Ä–µ—á —Ñ–æ–ª–∏–æ" },
      { id: "plates-cups-utensils", name: "–ï–¥–Ω–æ–∫—Ä–∞—Ç–Ω–∏ —á–∏–Ω–∏–∏, —á–∞—à–∏ –∏ –ø—Ä–∏–±–æ—Ä–∏" }
    ]
  },
  { 
    id: "organization-storage", 
    text: "üì¶–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∏ —Å—ä—Ö—Ä–∞–Ω–µ–Ω–∏–µ", 
    link: "organization-storage",
    subcategories: [
      { id: "containers-boxes", name: "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –∏ –∫—É—Ç–∏–∏" },
      { id: "organizers", name: "–û—Ä–≥–∞–Ω–∞–π–∑–µ—Ä–∏" }
    ]
  },
  { 
    id: "pet-care", 
    text: "üêæ–ì—Ä–∏–∂–∞ –∑–∞ –¥–æ–º–∞—à–Ω–∏ –ª—é–±–∏–º—Ü–∏", 
    link: "pet-care",
    subcategories: [
      { id: "pet-food", name: "–•—Ä–∞–Ω–∞ –∑–∞ –∫—É—á–µ—Ç–∞ –∏ –∫–æ—Ç–∫–∏" },
      { id: "pet-accessories", name: "–ê–∫—Å–µ—Å–æ–∞—Ä–∏ –∑–∞ –¥–æ–º–∞—à–Ω–∏ –ª—é–±–∏–º—Ü–∏" }
    ]
  },
  { 
    id: "toiletries", 
    text: "üß¥–¢–æ–∞–ª–µ—Ç–Ω–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏", 
    link: "toiletries",
    subcategories: [
      { id: "shampoos-conditioners", name: "–®–∞–º–ø–æ–∞–Ω–∏ –∏ –±–∞–ª—Å–∞–º–∏" },
      { id: "shower-gels-soaps", name: "–î—É—à –≥–µ–ª–æ–≤–µ –∏ —Å–∞–ø—É–Ω–∏" },
      { id: "toothpaste-mouthwash", name: "–ü–∞—Å—Ç–∞ –∑–∞ –∑—ä–±–∏ –∏ –≤–æ–¥–∞ –∑–∞ —É—Å—Ç–∞" },
      { id: "deodorants", name: "–î–µ–∑–æ–¥–æ—Ä–∞–Ω—Ç–∏" }
    ]
  },
  { 
    id: "skin-care", 
    text: "üíÜ‚Äç‚ôÄÔ∏è–ì—Ä–∏–∂–∞ –∑–∞ –∫–æ–∂–∞—Ç–∞", 
    link: "skin-care",
    subcategories: [
      { id: "creams-lotions", name: "–ö—Ä–µ–º–æ–≤–µ –∏ –ª–æ—Å–∏–æ–Ω–∏" },
      { id: "sun-protection", name: "–°–ª—ä–Ω—Ü–µ–∑–∞—â–∏—Ç–∞" },
      { id: "face-masks", name: "–ú–∞—Å–∫–∏ –∑–∞ –ª–∏—Ü–µ" }
    ]
  },
  { 
    id: "hair-care", 
    text: "üíá‚Äç‚ôÄÔ∏è–ì—Ä–∏–∂–∞ –∑–∞ –∫–æ—Å–∞—Ç–∞", 
    link: "hair-care",
    subcategories: [
      { id: "hair-dye", name: "–ë–æ–∏ –∑–∞ –∫–æ—Å–∞" },
      { id: "hair-gels-lacquers", name: "–ì–µ–ª–æ–≤–µ –∏ –ª–∞–∫–æ–≤–µ –∑–∞ –∫–æ—Å–∞" }
    ]
  },
  { 
    id: "health-wellness", 
    text: "üíä–ó–¥—Ä–∞–≤–µ –∏ —É–µ–ª–Ω–µ—Å", 
    link: "health-wellness",
    subcategories: [
      { id: "vitamins-supplements", name: "–í–∏—Ç–∞–º–∏–Ω–∏ –∏ –¥–æ–±–∞–≤–∫–∏" },
      { id: "first-aid", name: "–ü—ä—Ä–≤–∞ –ø–æ–º–æ—â" },
      { id: "otc-medicine", name: "–õ–µ–∫–∞—Ä—Å—Ç–≤–∞ –±–µ–∑ —Ä–µ—Ü–µ–ø—Ç–∞" }
    ]
  },
  { 
    id: "baby-products", 
    text: "üë∂–ë–µ–±–µ—à–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∏", 
    link: "baby-products",
    subcategories: [
      { id: "diapers", name: "–ü–µ–ª–µ–Ω–∏" },
      { id: "wipes", name: "–ú–æ–∫—Ä–∏ –∫—ä—Ä–ø–∏—á–∫–∏" },
      { id: "baby-food", name: "–ë–µ–±–µ—à–∫–∞ —Ö—Ä–∞–Ω–∞" }
    ]
  },
  { 
    id: "kitchen-serving", 
    text: "üç≥–ö—É—Ö–Ω—è –∏ —Å–µ—Ä–≤–∏—Ä–∞–Ω–µ", 
    link: "kitchen-serving",
    subcategories: [
      { id: "pots-pans", name: "–¢–µ–Ω–¥–∂–µ—Ä–∏, —Ç–∏–≥–∞–Ω–∏" },
      { id: "plates-utensils", name: "–ß–∏–Ω–∏–∏ –∏ –ø—Ä–∏–±–æ—Ä–∏" },
      { id: "kitchen-accessories", name: "–ö—É—Ö–Ω–µ–Ω—Å–∫–∏ –∞–∫—Å–µ—Å–æ–∞—Ä–∏" }
    ]
  },
  { 
    id: "small-appliances", 
    text: "üîå–ï–ª–µ–∫—Ç—Ä–æ—É—Ä–µ–¥–∏", 
    link: "small-appliances",
    subcategories: [
      { id: "small-appliances", name: "–ú–∞–ª–∫–∏ —É—Ä–µ–¥–∏ (—á–∞–π–Ω–∏—Ü–∏, —Ç–æ—Å—Ç–µ—Ä–∏, –±–ª–µ–Ω–¥–µ—Ä–∏)" }
    ]
  },
  { 
    id: "electronics-accessories", 
    text: "üîã–ï–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –∞–∫—Å–µ—Å–æ–∞—Ä–∏", 
    link: "electronics-accessories",
    subcategories: [
      { id: "chargers", name: "–ó–∞—Ä—è–¥–Ω–∏" },
      { id: "batteries", name: "–ë–∞—Ç–µ—Ä–∏–∏" }
    ]
  },
  { 
    id: "textiles-clothing", 
    text: "üß¶–¢–µ–∫—Å—Ç–∏–ª –∏ –æ–±–ª–µ–∫–ª–æ", 
    link: "textiles-clothing",
    subcategories: [
      { id: "socks", name: "–ß–æ—Ä–∞–ø–∏" },
      { id: "towels", name: "–•–∞–≤–ª–∏–∏" },
      { id: "bedding", name: "–°–ø–∞–ª–Ω–æ –±–µ–ª—å–æ" }
    ]
  },
  { 
    id: "office-stationery", 
    text: "üñäÔ∏è–û—Ñ–∏—Å –∏ –∫–∞–Ω—Ü–µ–ª–∞—Ä—Å–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∏", 
    link: "office-stationery",
    subcategories: [
      { id: "notebooks", name: "–¢–µ—Ç—Ä–∞–¥–∫–∏" },
      { id: "pens", name: "–•–∏–º–∏–∫–∞–ª–∫–∏" }
    ]
  },
  { 
    id: "car-products", 
    text: "üöó–ê–≤—Ç–æ–º–æ–±–∏–ª–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏", 
    link: "car-products",
    subcategories: [
      { id: "car-cleaning", name: "–ü–æ—á–∏—Å—Ç–≤–∞—â–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∏ –∑–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏" },
      { id: "oils-fluids", name: "–ú–∞—Å–ª–∞ –∏ —Ç–µ—á–Ω–æ—Å—Ç–∏" }
    ]
  },
  { 
    id: "seasonal-garden", 
    text: "üå±–°–µ–∑–æ–Ω–Ω–∏ –∏ –≥—Ä–∞–¥–∏–Ω—Å–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∏", 
    link: "seasonal-garden",
    subcategories: [
      { id: "plants", name: "–†–∞—Å—Ç–µ–Ω–∏—è" },
      { id: "garden-tools", name: "–ì—Ä–∞–¥–∏–Ω—Å–∫–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏" }
    ]
  },
  { 
    id: "sports-leisure", 
    text: "üèãÔ∏è‚Äç‚ôÇÔ∏è–°–ø–æ—Ä—Ç –∏ —Å–≤–æ–±–æ–¥–Ω–æ –≤—Ä–µ–º–µ", 
    link: "sports-leisure",
    subcategories: [
      { id: "fitness-accessories", name: "–§–∏—Ç–Ω–µ—Å –∞–∫—Å–µ—Å–æ–∞—Ä–∏" },
      { id: "tourist-equipment", name: "–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ –æ–±–æ—Ä—É–¥–≤–∞–Ω–µ" }
    ]
  },
];

// Function to determine category type decides on colors
const getCategoryColors = (categoryText: string): string[] => {
  
  // Food & Beverages
  const foodCategories = [
    "üçé–ü–ª–æ–¥–æ–≤–µ –∏ –∑–µ–ª–µ–Ω—á—É—Ü–∏",
    "ü•©–ú–µ—Å–æ –∏ –ø—Ç–∏—Ü–∏",
    "üêü–†–∏–±–∞ –∏ –º–æ—Ä—Å–∫–∏ –¥–∞—Ä–æ–≤–µ",
    "üßÄ–ú–ª–µ—á–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏",
    "üçû–•–ª–µ–±–Ω–∏ –∏–∑–¥–µ–ª–∏—è",
    "‚ùÑÔ∏è–ó–∞–º—Ä–∞–∑–µ–Ω–∏ —Ö—Ä–∞–Ω–∏",
    "ü•´–ö–æ–Ω—Å–µ—Ä–≤–∏ –∏ –ø–∞–∫–µ—Ç–∏—Ä–∞–Ω–∏ —Ö—Ä–∞–Ω–∏",
    "ü•ñ–û—Å–Ω–æ–≤–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏ –∏ –ø–æ–¥–ø—Ä–∞–≤–∫–∏",
    "üçø–°–Ω–∞–∫—Å–æ–≤–µ",
    "üç´–°–ª–∞–¥–∫–∏ –∏ –¥–µ—Å–µ—Ä—Ç–∏",
    "ü•£–ó–∞–∫—É—Å–∫–∞ –∏ –∑—ä—Ä–Ω–µ–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏",
    "ü•§–ù–∞–ø–∏—Ç–∫–∏",
    "üç∑–ê–ª–∫–æ—Ö–æ–ª"
  ];

  // Non-Food Household Products  
  const householdCategories = [
    "üßº–ü–æ—á–∏—Å—Ç–≤–∞—â–∏ –∏ –ø–µ—Ä–∏–ª–Ω–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∏",
    "üßª–•–∞—Ä—Ç–∏–µ–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏",
    "ü•°–ï–¥–Ω–æ–∫—Ä–∞—Ç–Ω–∏ —Å—ä–¥–æ–≤–µ –∏ –æ–ø–∞–∫–æ–≤–∫–∏",
    "üì¶–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∏ —Å—ä—Ö—Ä–∞–Ω–µ–Ω–∏–µ",
    "üêæ–ì—Ä–∏–∂–∞ –∑–∞ –¥–æ–º–∞—à–Ω–∏ –ª—é–±–∏–º—Ü–∏"
  ];

  // Personal Care & Health
  const personalCareCategories = [
    "üß¥–¢–æ–∞–ª–µ—Ç–Ω–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏",
    "üíÜ‚Äç‚ôÄÔ∏è–ì—Ä–∏–∂–∞ –∑–∞ –∫–æ–∂–∞—Ç–∞",
    "üíá‚Äç‚ôÄÔ∏è–ì—Ä–∏–∂–∞ –∑–∞ –∫–æ—Å–∞—Ç–∞",
    "üíä–ó–¥—Ä–∞–≤–µ –∏ —É–µ–ª–Ω–µ—Å",
    "üë∂–ë–µ–±–µ—à–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∏"
  ];

  // Non-Food General Merchandise
  const generalMerchandiseCategories = [
    "üç≥–ö—É—Ö–Ω—è –∏ —Å–µ—Ä–≤–∏—Ä–∞–Ω–µ",
    "üîå–ï–ª–µ–∫—Ç—Ä–æ—É—Ä–µ–¥–∏",
    "üîã–ï–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –∞–∫—Å–µ—Å–æ–∞—Ä–∏",
    "üß¶–¢–µ–∫—Å—Ç–∏–ª –∏ –æ–±–ª–µ–∫–ª–æ",
    "üñäÔ∏è–û—Ñ–∏—Å –∏ –∫–∞–Ω—Ü–µ–ª–∞—Ä—Å–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∏",
    "üöó–ê–≤—Ç–æ–º–æ–±–∏–ª–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏",
    "üå±–°–µ–∑–æ–Ω–Ω–∏ –∏ –≥—Ä–∞–¥–∏–Ω—Å–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∏",
    "üèãÔ∏è‚Äç‚ôÇÔ∏è–°–ø–æ—Ä—Ç –∏ —Å–≤–æ–±–æ–¥–Ω–æ –≤—Ä–µ–º–µ"
  ];

  if (foodCategories.includes(categoryText)) {
    // Green gradient 
    return ['rgba(203,230,246,1)', 'rgba(143,228,201,1)'] as [string, string];
  } else if (householdCategories.includes(categoryText)) {
    // Blue gradient 
    return ['rgba(255,218,185,1)', 'rgba(255,182,193,1)'] as [string, string];
  } else if (personalCareCategories.includes(categoryText)) {
    // Pink/Purple gradient 
    return ['rgba(221,214,243,1)', 'rgba(196,181,253,1)'] as [string, string];
  } else if (generalMerchandiseCategories.includes(categoryText)) {
    // Orange gradient
    return ['rgba(143,228,201,1)', 'rgba(150,210,255,1)'] as [string, string];
  } else {
    // Default gradient
    return ['rgba(203,230,246,1)', 'rgba(143,228,201,1)'] as [string, string];
  }
};

// Fixed 2 columns
const numColumns = 2;

const Categories = () => {
  const router = useRouter();

  const handleCategoryPress = (category: CategoriesProps) => {
    router.push({
      pathname: '/subcategories/[subcategoryid]',
      params: { 
        subcategoryid: category.id,
        categoryName: category.text,
        subcategories: JSON.stringify(category.subcategories)
      }
    });
  };

  const renderCategoryItem = ({ item }: { item: CategoriesProps }) => (
    <View style={styles.itemContainer}>
      <TouchableOpacity 
        onPress={() => handleCategoryPress(item)} 
        style={styles.button}
      >
        <LinearGradient
          colors={getCategoryColors(item.text) as [string, string]}
          start={{ x: 0, y: 1 }}
          style={styles.categories}
        >
          <Text style={styles.categoryText}>{item.text}</Text>
        </LinearGradient>
      </TouchableOpacity>
    </View>
  );

  const getItemLayout = (data: any, index: number) => ({
    length: hp(10) + 16, // item height + margins
    offset: (hp(10) + 16) * Math.floor(index / numColumns),
    index,
  });

  return (
    <ImageBackground
      source={require("../../assets/images/background2.png")}
      style={styles.backgroundImage}
    >
      <View style={styles.container}>
        {/* Title */}
        <View style={styles.titleContainer}>
          <Text style={styles.title}>–ò–∑–±–µ—Ä–∏ —Å–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è</Text>
        </View>
        
        {/* Categories FlatList */}
        <FlatList
          data={categoriesArray}
          renderItem={renderCategoryItem}
          keyExtractor={(item) => item.id}
          numColumns={numColumns}
          showsVerticalScrollIndicator={false}
          contentContainerStyle={styles.flatListContainer}
          columnWrapperStyle={styles.row}
          removeClippedSubviews={true}
          initialNumToRender={10}
          maxToRenderPerBatch={10}
          windowSize={10}
        />
      </View>
    </ImageBackground>
  );
};

const styles = StyleSheet.create({
  backgroundImage: {
    flex: 1,
    width: '100%',
    height: '100%',
  },
  container: {
    flex: 1,
    paddingTop: 55,
  },
  titleContainer: {
    alignItems: 'center',
    paddingVertical: 20,
  },
  title: {
    fontSize: getFontSize(32),
    fontWeight: 'bold',
    textAlign: 'center',
    paddingTop: 12,
    paddingBottom: 2,
  },
  flatListContainer: {
    paddingHorizontal: 2,
    paddingBottom: hp(14),
  },
  row: {
    flexWrap: 'wrap',
  },
  itemContainer: {
    margin: 8,
  },
  categories: {
    padding: 15,
    alignItems: 'center',
    borderRadius: 20,
  },
  categoryText: {
    fontSize: getFontSize(16),
    fontWeight: '600',
  },
  button: {
    alignItems: 'center',
  },
});

export default Categories;